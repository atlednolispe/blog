1.
问题描述: Django页面展示英文切换中文基础设置(Admin)

原因:
settings中未正确设置LANGUAGE_CODE & TIME_ZONE

解决方案:
settings文件中修改以下配置:
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

2.
问题描述: Django Admin页面展示内容为Tag object (2)

原因:
models中未定义__str__方法

解决方案:
添加__str__ method:
    def __str__(self):
        return self.name

3.
问题描述: 将models注册到admin的三种方案

解决方案:
(1)
class PostAdmin(admin.ModelAdmin):
    pass


admin.site.register(Post)


(2)
class CategoryAdmin(admin.ModelAdmin):
    pass


admin.site.register(Category, CategoryAdmin)

由于CategoryAdmin中未定义相关内容,所以效果上
admin.site.register(Category, CategoryAdmin) = admin.site.register(Category)


(3)
@admin.register(Tag)
class TagAdmin(admin.ModelAdmin):
    pass

通过decorator注册Admin

4.
问题描述: 创建管理员

解决方案:
(django20) atlednolispedeMacBook-Pro:blog atlednolispe$ python3 manage.py createsuperuser

5.
settings中的 ROOT_URLCONF = 'blog.urls' 可用于定制url提供不更改线上url的测试

# TODO(atlednolispe) To be completed.

6.
问题描述: list_display无法展示ManyToManyField

Unhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10415d2f0>
Traceback (most recent call last):
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/autoreload.py", line 225, in wrapper
    fn(*args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/management/commands/runserver.py", line 121, in inner_run
    self.check(display_num_errors=True)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/management/base.py", line 410, in check
    raise SystemCheckError(msg)
django.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:

ERRORS:
<class 'epsilon.admin.PostAdmin'>: (admin.E109) The value of 'list_display[2]' must not be a ManyToManyField.

System check identified 1 issue (0 silenced).


原因:
ManyToManyField fields aren’t supported, because that would entail executing a separate SQL statement for each row in the table.
If you want to do this nonetheless, give your model a custom method, and add that method’s name to list_display.

解决方案:
在models的定义中定制对应方法,在对应的Admin类的list_display中增加对应方法
这样做在Admin中展示字段时显示的是方法名,使用method的short_description属性来定制显示

class Post(models.Model):
    ...
    def show_tags(self):
        return ', '.join(str(t) for t in self.tags.all())
        show_tags.short_description = '标签'

@admin.register(Post, site=custom_site)
class PostAdmin(admin.ModelAdmin):
    ...
    list_display = ('title', 'category', 'show_tags', 'status', 'owner', 'created_time',)

7.
问题描述: Admin中search异常

(1)
Internal Server Error: /custom_admin/epsilon/post/
Traceback (most recent call last):
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 574, in wrapper
    return self.admin_site.admin_view(view)(*args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 142, in _wrapped_view
    response = view_func(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/sites.py", line 223, in inner
    return view(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 62, in _wrapper
    return bound_func(*args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 142, in _wrapped_view
    response = view_func(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 58, in bound_func
    return func.__get__(self, type(self))(*args2, **kwargs2)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 1570, in changelist_view
    cl = self.get_changelist_instance(request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 705, in get_changelist_instance
    self,
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/views/main.py", line 76, in __init__
    self.queryset = self.get_queryset(request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/views/main.py", line 354, in get_queryset
    qs, search_use_distinct = self.model_admin.get_search_results(request, qs, self.query)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 957, in get_search_results
    queryset = queryset.filter(reduce(operator.or_, or_queries))
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/query.py", line 836, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/query.py", line 854, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1253, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1271, in _add_q
    current_negated, allow_joins, split_subq)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1277, in _add_q
    split_subq=split_subq,
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1215, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1076, in build_lookup
    raise FieldError('Related Field got invalid lookup: {}'.format(lookup_name))
django.core.exceptions.FieldError: Related Field got invalid lookup: icontains
[11/Feb/2018 20:10:56] "GET /custom_admin/epsilon/post/?q=Django HTTP/1.1" 500 154393

(2)
Internal Server Error: /custom_admin/epsilon/post/
Traceback (most recent call last):
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 574, in wrapper
    return self.admin_site.admin_view(view)(*args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 142, in _wrapped_view
    response = view_func(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/sites.py", line 223, in inner
    return view(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 62, in _wrapper
    return bound_func(*args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 142, in _wrapped_view
    response = view_func(request, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/utils/decorators.py", line 58, in bound_func
    return func.__get__(self, type(self))(*args2, **kwargs2)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 1570, in changelist_view
    cl = self.get_changelist_instance(request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 705, in get_changelist_instance
    self,
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/views/main.py", line 76, in __init__
    self.queryset = self.get_queryset(request)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/views/main.py", line 354, in get_queryset
    qs, search_use_distinct = self.model_admin.get_search_results(request, qs, self.query)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/contrib/admin/options.py", line 957, in get_search_results
    queryset = queryset.filter(reduce(operator.or_, or_queries))
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/query.py", line 836, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/query.py", line 854, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1253, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1271, in _add_q
    current_negated, allow_joins, split_subq)
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1277, in _add_q
    split_subq=split_subq,
  File "/Users/atlednolispe/.virtualenvs/django20/lib/python3.6/site-packages/django/db/models/sql/query.py", line 1207, in build_filter
    raise FieldError('Related Field got invalid lookup: {}'.format(lookups[0]))
django.core.exceptions.FieldError: Related Field got invalid lookup: name
[11/Feb/2018 20:26:10] "GET /custom_admin/epsilon/post/?q=test HTTP/1.1" 500 149779

原因:
(1)search_fields中对外键的字段的搜索需要用search_fields = ['foreign_key__related_fieldname']
(2)Django的auth/models中的User的属性名为username而不是name

解决方案:
@admin.register(Post, site=custom_site)
class PostAdmin(admin.ModelAdmin):
    ...
    search_fields = ['title', 'category__name', 'owner__username', ]

8.
问题描述: 简易定制Admin的后台显示以及title和Admin的urls

解决方案:
继承AdminSite来定制Admin页面,并且生成实例,并且在settings中配置对应url,注册Admin时也通过此实例注册site
from django.contrib.admin import AdminSite


class CustomSite(AdminSite):
    site_header = '博客'
    site_title = '博客管理后台'
    index_title = '首页'


custom_site = CustomSite(name='custom_site')

urlpatterns = [
    path('admin/', admin.site.urls),
    path('custom_admin/', custom_site.urls),
]

@admin.register(Category, site=custom_site)
class CategoryAdmin(admin.ModelAdmin):
    pass

9.
问题描述: list_filter中配置了owner字段但过滤器中未显示owner相关的过滤器

list_filter = ('category', 'owner')

原因:
只有单个用户时不显示过滤器,需要debug Admin的源码,搜索list_filter。(可是我好像并不能看懂对应的内容)

解决方案:
创建一个新用户

10.
问题描述: pdb debugger

解决方案:
ref: https://www.ibm.com/developerworks/cn/linux/l-cn-pythondebugger/

在需要断点处增加import pdb; pdb.set_trace()

l: 查看当前行的代码段
c: 继续执行程序
n: 执行下一行
enter: 表示重复执行上一条debug命令
s: 进入函数
var: 显示var的值

# 对于我们这样的小白来说,还是用IDE的debugger更容易

11.
问题描述: Admin编辑页面的定制

解决方案:
ref: https://docs.djangoproject.com/en/2.0/ref/contrib/admin/

class PostAdmin(admin.ModelAdmin):
    ...
    date_hierarchy = 'created_time'  # 时间的层级filter
    list_display_links = ('title', 'category')  # 可以通过点击字段到编辑页面
    list_editable = ('status',)  # 字段可编辑

    # fields = ('title', 'category',)  # 编辑页面展示哪些字段
    # 对编辑页面的更多定制, fields & fieldsets 二选一
    fieldsets = (
        ('基础配置', {
            'fields': (('title', 'category'), 'content')
        }),
        ('高级配置', {
            'classes': ('collapse',),  # 点击一次才展示
            'fields': ('tags', 'owner')
        }),
    )

    filter_horizontal = ('tags', )  # 左右箭头挑选
    # filter_vertical = ('tags', )

    def operator(self, obj):  # TODO(atlednolispe) admin中如何调用operator方法, obj又是什么?
        return format_html(
            '<a href="{}">编辑</a>',
            reverse('custom_site:epsilon_post_change', args=(obj.id,))
        )
    # operator.allow_tags = True  # 老版本用于转义html,现在用format_html替代
    operator.short_description = '操作'
    operator.empty_value_display = '???'  # 空值的默认展示