1.
问题描述: admin替换为xadmin

解决方案:
xadmin: https://github.com/sshwsfc/xadmin

(1)安装
# 不能pip3安装,据说源有些问题
(django20) atlednolispedeMBP:blog atlednolispe$ pip3 install git+https://github.com/sshwsfc/xadmin

(django20) atlednolispedeMBP:blog atlednolispe$ rm blog/custom_site.py blog/custom_admin.py

(django20) atlednolispedeMBP:blog atlednolispe$ python3 manage.py makemigrations
(django20) atlednolispedeMBP:blog atlednolispe$ python3 manage.py migrate

# blog/blog/settings/base.py
INSTALLED_APPS = [
    ...
    'xadmin',
    'crispy_forms',
    'reversion',
]

# blog/blog/settings/development.py
TEMPLATES = [
         'DIRS': [
             ...
             os.path.join(SITE_PACKAGES, 'xadmin/templates'),
         ],
]

# blog/blog/urls.py
...
import xadmin
from xadmin.plugins import xversion

from blog import adminx

xadmin.autodiscover()
xversion.register_models()  # revision & widget

urlpatterns = [
    path('', IndexView.as_view(), name='index'),
    path('blog/', include('epsilon.urls')),
    path('config/', include('config.urls')),
    path('comment/', include('comment.urls')),
    path('admin/', xadmin.site.urls),  # admin & custom_admin removed
]

# blog/blog/adminx.py
class BaseOwnerAdmin:
    """
    针对有owner属性的数据, 重写:
    1. save_model - 保证每条数据属于当前用户
    2. get_queryset- 保证每个用户只能看到自己的文章
    """
    def get_list_queryset(self):  # get_query_set(self, request) --> get_list_queryset(self)
        request = self.request

        qs = super().get_list_queryset()
        if request.user.is_superuser:
            return qs
        return qs.filter(owner=request.user)

    def save_models(self):  # save_model(self, request, obj, form, change) --> save_models(self)
        obj.owner = self.request.user
        super().save_models()

# blog/epsilon/adminx.py
import xadmin

from django.utils.html import format_html
from django.urls import reverse
from xadmin.layout import Fieldset, Row

from blog.adminx import BaseOwnerAdmin

from .models import Post, Category, Tag
from .adminforms import TagAdminForm


class PostAdmin(BaseOwnerAdmin):
    list_display = (
        'title', 'category', 'show_tags', 'status',
        'pv', 'uv', 'created_time', 'operator'
    )
    search_fields = ('title', 'category__name')

    list_filter = ('category',)
    save_on_top = True
    date_hierarchy = 'created_time'  # 时间的层级filter

    form_layout = (
        Fieldset(
            ('基础配置', {
                'fields': (Row('title', 'category'), 'is_markdown',
                           'content', 'desc')
            }),
            # TODO(atlednolispe) 隐藏配置失效。
            # ('高级配置', {  # post can't be showed
            #     'classes': ('collapse',),  # 点击一次才展示
            #     'fields': ('tags',)
            # }),
        )
    )

    filter_horizontal = ('tags', )  # 左右箭头挑选

    def operator(self, obj):
        return format_html(
            '<a href="{}">编辑</a>',
            reverse('custom_site:epsilon_post_change', args=(obj.id,))
        )
    operator.short_description = '操作'
    operator.empty_value_display = '???'  # 空值的默认展示


xadmin.site.register(Post, PostAdmin)  # change decorator to site.register


class CategoryAdmin(BaseOwnerAdmin):
    list_display = ('name', 'status', 'is_nav', 'created_time')
    fields = ('name', 'status', 'is_nav')


xadmin.site.register(Category, CategoryAdmin)


class TagAdmin(BaseOwnerAdmin):
    form = TagAdminForm
    fields = ('name', 'status', 'desc')
    list_display = ('name', 'status', 'desc', 'created_time')


xadmin.site.register(Tag, TagAdmin)

# blog/blog/settings/development.py
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            ...
            os.path.join(SITE_PACKAGES, 'xadmin/templates'),
            os.path.join(SITE_PACKAGES, 'crispy_forms/templates'),
            os.path.join(SITE_PACKAGES, 'reversion/templates'),
        ],
    },
]

2.
问题描述: admin修改或者新建post报错: 请修正下面的错误。

原因:
将Post所有字段在admin页面展示后发现markdown渲染后的content_html字段为必填项,修改model中字段属性blank=True

解决方案:
# epsilon/models.py
class Post(models.Model):
    ...
    content_html = models.TextField(verbose_name="markdown渲染后的数据", default='', blank=True)

3.
问题描述: 修改admin的title&footer

解决方案:
# ref: xadmin/views/base.py -> class CommonAdminView,重新方法来定制admin
# blog/blog/adminx.py
import xadmin

from xadmin.views import CommAdminView


class GlobalSetting(CommAdminView):
    site_title = 'Epsilon Delta'
    site_footer = 'power by atlednolispe'


xadmin.site.register(CommAdminView, GlobalSetting)